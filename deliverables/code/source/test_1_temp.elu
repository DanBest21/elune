global g = 10

i, j = 1, 2 + 1

obj = []
obj['x'] = 5

global g_obj = [x = 5, y = 6]

operators = [("+") = 1, ("-") = 2, ("*") = 3, ("/") = 4]

def multiply(x, y)
{
	return x * y
}

global def multiply_g(x)
{
	return x * g
}

def obj.multiply_o(x)
{
	return x * obj.x
}

def obj:multiply_s(x)
{
	return x * self.x
}

def map(f, xs)
{
	for i = 0, i < length xs, i += 1
	{
		xs[i] = f(xs[i])
	}
	
	return xs
}

def filter(b, xs)
{
	ys = []
	i = 0
	
	foreach x in xs
	{
		if b(x)
		{
			i += 1
			ys[i] = x
		}
	}
	
	return ys
}

xs = map(multiply_g, [1, 2, 3, 4, 5])

foreach x in xs
{
	print(x)
}

ys = filter(lambda x { if x % 2 == 0 { return true } else { return false } }, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

foreach y in ys
{
	print y
}