if not ExposedMembers.DB_YT 
{
	ExposedMembers.DB_YT = {}
}

DB_YT = ExposedMembers.DB_YT

def YT_GetGoldFromForeignTourists(ActivePlayerID)
{
	// ActivePlayer = Players[ActivePlayerID]
	ActivePlayer = civ:lookup("GetPlayer", ActivePlayerID)
	// ActivePlayerCulture = ActivePlayer:GetCulture()
	ActivePlayerCulture = civ:query("culture", ActivePlayer)
	// OtherPlayerIDs = PlayerManager.GetAliveMajorIDs()
	OtherPlayerIDs = civ:get("aliveMajorIDs")
	
	PerTurnSum = 0
	
	for _, LoopPlayerID in OtherPlayerIDs
	{
		if ActivePlayerID != LoopPlayerID and civ:query("hasMet", ActivePlayer, LoopPlayerID) == true // ActivePlayer:GetDiplomacy():HasMet(LoopPlayerID) == true
		{
			// Temp = ActivePlayerCulture:GetTouristsFromTooltip(LoopPlayerID)
			Temp = civ:query("touristTooltipInfo", ActivePlayerCulture, LoopPlayerID)
			
			z = 0
			PerTurn = 0
			Lifetime = 0
			
			for y in string.gmatch(Temp, '(%d+)')
			{
				if z == 0 then
					PerTurn = y
				else
					Lifetime = y
				end
				z = z + 1
			}
			
			PerTurnSum = PerTurnSum + PerTurn
		}
	}
	
	// OtherPlayers = PlayerManager.GetAliveMajorsCount() - 1
	OtherPlayers = civ:get("aliveMajorsCount") - 1
	
	return PerTurnSum / OtherPlayers
}

def YT_GoldFromTourism_Init_UI()
{
	DB_YT.YT_GetGoldFromForeignTourists = YT_GetGoldFromForeignTourists
}

YT_GoldFromTourism_Init_UI()