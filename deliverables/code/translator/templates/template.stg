sep() ::= << ; >>
end() ::= << end >>
return(values) ::= << return <values; separator = ", "> >>

globalVar(names, values) ::= << <names; separator = ", "> = <values; separator = ", "> >>
varDec(names, values) ::= << local <names; separator = ", "> = <values; separator = ", "> >>
varAssign(names, values) ::= << <names; separator = ", "> = <values; separator = ", "> >>

globalFuncDef(name, args) ::= << function <name>(<args; separator = ", ">) >>
funcDef(name, args) ::= << local function <name>(<args; separator = ", ">) >>

for(var, start, end, inc) ::= << for <var> = <start>, <end><if(inc)>, <inc><endif> do >>
forEach(element, list) ::= << for <element> in <list> do >>

if(cond) ::= << if <cond> >>
elseIf(cond) ::= << else if <cond> >>
else(cond) ::= << else <cond> >>

operatorExpr(x, y, symbol) ::= << <x> <symbol> <y> >>
compoundAssign(x, y, symbol) ::= << <x> = <x> <symbol> <y> >>

len(var) ::= << #<var> >>